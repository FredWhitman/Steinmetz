export async function fetchAndFillForm(id, table) {
  const url = `${BASE_URL}?view${
    table.charAt(0).toUpperCase() + table.slice(1)
  }=1&id=${id}&table=${table}`;
  console.log("FetchFillForm URL:", url);

  try {
    const response = await fetch(url);
    const rawText = await response.text();
    const responseData = JSON.parse(rawText);
    if (!responseData || response.error) {
      console.error("Error from server:", responseData?.error);
      return;
    }
    console.log(JSON.parse(rawText));
    if (responseData["startUpRejects"] === 0) {
      console.log("startRejects 0");
    }

    const fieldMappings = {
      ///table columns and element id combo format  tableColumn: "element id",
      prodLogs: {
        logID: "logID",
        productID: "vpartName",
        prodDate: "vlogDate",
        runStatus: "vprodRun",
        mat1: "vMat1Name",
        matUsed1: "vhop1Lbs",
        mat2: "vMat2Name",
        matUsed2: "vhop2Lbs",
        mat3: "vMat3Name",
        matUsed3: "vhop3Lbs",
        mat4: "vMat4Name",
        matUsed4: "vhop4Lbs",
        blenderTotals: "vBlenderTotals",
        bigDryerTemp: "vbigDryerTemp",
        bigDryerDew: "vbigDryerDew",
        pressDryerTemp: "vPressDryerTemp",
        pressDryerDew: "vPressDryerDew",
        chillerTemp: "vChiller",
        moldTemp: "vTCU",
        t1: "vT1",
        t2: "vT2",
        t3: "vT3",
        t4: "vT4",
        m1: "vM1",
        m2: "vM2",
        m3: "vM3",
        m4: "vM4",
        m5: "vM5",
        m6: "vM6",
        m7: "vM7",
        pressCounter: "vPressCounter",
        startUpRejects: "vPressRejects",
        Comments: "vcommentText",
      },
    };

    if(table === "prodLogs"){
      import("./productionUiManager.js").then(({ calculateDailyUsage }) => {
        const hoppers = [
          document.getElementById("vhop1Lbs"),
          document.getElementById("vhop2Lbs"),
          document.getElementById("vhop3Lbs"),
          document.getElementById("vhop4Lbs"),
        ];

        
      });
    }
    Object.keys(fieldMappings[table]).forEach((dbKey) => {
      const formID = fieldMappings[table][dbKey];
      const element = document.getElementById(formID);
      if (element) {
        element.value = responseData[dbKey] ?? "";
      } else {
        console.warn(`Element with ID '${formID}' not found!`);
      }
    });
  } catch (error) {
    console.error("Failed to parse Json in fetchAndFillForm:", error);
  }
}